{"version":3,"file":"jobRecommendations.js","sourceRoot":"/","sources":["lib/recommendations/jobRecommendations.ts"],"names":[],"mappings":";;AAEA,MAAM,aAAa,GAAG,CAAC,EACrB,WAAW,EACX,IAAI,GAIL,EAAS,EAAE;IACV,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,WAAW,CAAC;IAC7C,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;IAEzB,OAAO,IAAI;QACT,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;QACZ,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,MAAM,oBAAoB,GACxB,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAkB,CAAC,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAC9D,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;QACrB,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,oBAAoB,CAAC,CAAC;QAEhD,MAAM,YAAY,GAAG,GAAG,CAAC,WAAW;YAClC,EAAE,KAAK,CAAC,GAAG,CAAC;aACX,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CACf,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CACtE,CAAC,MAAM,CAAC;QACX,KAAK,IAAI,YAAY,GAAG,CAAC,CAAC;QAE1B,IAAI,GAAG,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,EAAE,CAAC;YAC1C,KAAK,IAAI,CAAC,CAAC;QACb,CAAC;QAED,MAAM,YAAY,GAChB,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;QACzE,IAAI,YAAY,GAAG,EAAE,EAAE,CAAC;YACtB,KAAK,IAAI,CAAC,CAAC;QACb,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAe,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9D,KAAK,IAAI,eAAe,CAAC;QAEzB,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,CAAC,CAAC;SACD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;QAClC,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","sourcesContent":["import { Skill, Job } from \"@/common/constants\";\n\nconst recommendJobs = ({\n  currentUser,\n  jobs,\n}: {\n  currentUser: any;\n  jobs: Job[];\n}): Job[] => {\n  const { profile: userProfile } = currentUser;\n  const today = new Date();\n\n  return jobs\n    ?.map((job) => {\n      let score = 0;\n\n      const daysUntilJobDeadline =\n        (new Date(job.deadline as string).getTime() - today.getTime()) /\n        (1000 * 3600 * 24);\n      score += Math.max(0, 10 - daysUntilJobDeadline);\n\n      const skillMatches = job.description\n        ?.split(\" \")\n        .filter((word) =>\n          userProfile.skills?.map((skill: Skill) => skill.title).includes(word)\n        ).length;\n      score += skillMatches * 5;\n\n      if (job.location === userProfile.location) {\n        score += 3;\n      }\n\n      const recentUpdate =\n        (new Date(job.updated_at).getTime() - Date.now()) / (1000 * 3600 * 24);\n      if (recentUpdate < 30) {\n        score += 2;\n      }\n\n      const popularityScore = Math.min(job.views as number, 50) / 5;\n      score += popularityScore;\n\n      return { job, score };\n    })\n    .sort((a, b) => b.score - a.score)\n    ?.map((result) => result.job);\n};\n\nexport default recommendJobs;\n"]}