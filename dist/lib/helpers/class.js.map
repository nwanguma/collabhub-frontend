{"version":3,"file":"class.js","sourceRoot":"/","sources":["lib/helpers/class.ts"],"names":[],"mappings":";;;AAEA,MAAa,WAAY,SAAQ,KAAK;IAGpC,YAAY,OAAe,EAAE,QAAwB;QACnD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,MAAM,KAAK,GAAG,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC;QAEpC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC;aAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,OAAO;gBACV,0EAA0E,CAAC;QAC/E,CAAC;IACH,CAAC;CACF;AAnBD,kCAmBC","sourcesContent":["import { ErrorResponse } from \"./constants\";\n\nexport class CustomError extends Error {\n  response?: ErrorResponse;\n\n  constructor(message: string, response?: ErrorResponse) {\n    super(message);\n    this.name = this.constructor.name;\n    this.response = response;\n\n    const error = response?.data?.error;\n\n    if (Array.isArray(error)) {\n      this.message = error[0];\n    } else if (typeof error === \"string\") {\n      this.message = error;\n    } else {\n      this.message =\n        \"An error occurred while processing your request. Please try again later.\";\n    }\n  }\n}\n"]}