{"version":3,"file":"index.js","sourceRoot":"/","sources":["store/user/index.ts"],"names":[],"mappings":"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","sourcesContent":["import axiosInstance from \"@/lib/axiosInstance\";\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Profile, User } from \"@/common/constants\";\n\ninterface InitialState {\n  data: User;\n  error: null | string;\n}\n\nconst initialState: InitialState = {\n  data: {\n    id: \"\",\n    email: \"\",\n    created_at: \"\",\n    status: \"\",\n    last_seen: new Date(),\n    profile: {\n      id: \"\",\n      first_name: \"\",\n      views: 0,\n      email: \"string\",\n      last_name: \"\",\n      avatar: \"\",\n      bio: \"\",\n      location: \"\",\n      phone: \"\",\n      website: \"\",\n      linkedin: \"\",\n      github: \"\",\n      resume: \"\",\n      languages: [],\n      comments: [],\n      reactions: [],\n      heading: \"\",\n      title: \"\",\n      skills: [],\n      followers: [],\n      following: [],\n    },\n  },\n  error: null,\n};\n\nexport const fetchUser = createAsyncThunk(\n  \"user/fetchUser\",\n  async (userId: string) => {\n    const response = await axiosInstance.get(`/api/proxy/users/${userId}`);\n    return response.data?.data;\n  }\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  \"user/fetchCurrentUser\",\n  async () => {\n    const response = await axiosInstance.get(`/api/proxy/users/me`);\n\n    return response.data?.data;\n  }\n);\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<User>) => {\n      state.data = action.payload;\n    },\n    updateProfile: (state, action: PayloadAction<Profile>) => {\n      state.data.profile = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(\n      fetchUser.fulfilled,\n      (state, action: PayloadAction<User>) => {\n        state.data = action.payload;\n      }\n    );\n    builder.addCase(fetchUser.rejected, (state, action) => {\n      state.error = action.error?.message || \"Failed to fetch user\";\n    });\n    builder.addCase(\n      fetchCurrentUser.fulfilled,\n      (state, action: PayloadAction<User>) => {\n        state.data = action.payload;\n      }\n    );\n    builder.addCase(fetchCurrentUser.rejected, (state, action) => {\n      state.error = action.error?.message || \"Failed to fetch user\";\n    });\n  },\n});\n\nexport const { setUser, updateProfile } = userSlice.actions;\nexport default userSlice.reducer;\n"]}