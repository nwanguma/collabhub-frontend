{"version":3,"file":"route.js","sourceRoot":"/","sources":["app/api/proxy/[...slug]/route.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { performance } from \"perf_hooks\";\nimport crypto from \"crypto\";\nimport CryptoJS from \"crypto-js\";\nimport { NextResponse } from \"next/server\";\n\nasync function parseRequestBody(req: Request) {\n  const contentType = req.headers.get(\"content-type\") || \"\";\n\n  if (contentType.includes(\"application/json\")) {\n    const body = await req.json();\n    return body;\n  } else if (contentType.includes(\"application/x-www-form-urlencoded\")) {\n    const formData = await req.formData();\n    const body: any = {};\n    formData.forEach((value, key) => {\n      body[key] = value;\n    });\n    return body;\n  } else if (contentType.includes(\"multipart/form-data\")) {\n    return await req.formData();\n  }\n\n  return null;\n}\n\nasync function handler(req: Request) {\n  const start = performance.now();\n  const url = new URL(req.url);\n  const slug = url.pathname.split(\"/api/proxy/\")[1];\n  const nonce = crypto.randomBytes(16).toString(\"base64\");\n  const reqBody = await parseRequestBody(req);\n\n  try {\n    const formData = reqBody instanceof FormData ? reqBody : null;\n    const data = formData ? formData : reqBody;\n\n    const isMultipart = req.headers\n      .get(\"content-type\")\n      ?.includes(\"multipart/form-data\");\n\n    const response = await axios({\n      method: req.method,\n      url: `${process.env.BACKEND_URL}/${slug}${url.search ? url.search : \"\"}`,\n      headers: {\n        ...(req.headers as any),\n        \"x-forwarded-for\":\n          req.headers.get(\"x-forwarded-for\") || req.headers.get(\"host\") || \"\",\n        \"X-Content-Type-Options\": \"nosniff\",\n        \"X-Frame-Options\": \"DENY\",\n        \"X-XSS-Protection\": \"1; mode=block\",\n        \"x-client-api-key\": process.env.CLIENT_API_KEY,\n        \"Strict-Transport-Security\": \"max-age=31536000; includeSubDomains\",\n        \"Content-Security-Policy\": `default-src 'self'; script-src 'nonce-${nonce}'`,\n        Authorization:\n          req.headers.get(\"Authorization\") || req.headers.get(\"authorization\"),\n        ...(isMultipart && { \"Content-Type\": req.headers.get(\"content-type\") }),\n      },\n      data,\n      timeout: 40000,\n    });\n\n    console.log(\n      `[PROXY] ${req.method} ${slug} - ${response.status} - ${\n        performance.now() - start\n      }ms`\n    );\n\n    const responseHeaders = new Headers(response.headers as any);\n    const nextResponse = NextResponse.json(response.data, {\n      status: response.status,\n      headers: responseHeaders,\n    });\n\n    return nextResponse;\n  } catch (error: any) {\n    const status = error.response?.status || 500;\n\n    console.error(\n      `[PROXY ERROR] ${req.method} ${slug} - ${status} - ${\n        performance.now() - start\n      }ms: ${error.message}`\n    );\n\n    return NextResponse.json(\n      {\n        error:\n          status == 500 || !error.response.data?.message\n            ? \"An error occurred while processing your request. Please try again later.\"\n            : error.response.data?.message,\n        details:\n          process.env.NODE_ENV === \"development\" ? error.message : undefined,\n      },\n      { status }\n    );\n  }\n}\n\nexport const GET = handler;\nexport const POST = handler;\nexport const PUT = handler;\nexport const DELETE = handler;\nexport const PATCH = handler;\n"]}